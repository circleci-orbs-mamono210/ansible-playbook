parameters-alias: &parameters-alias
  parameters:
    version:
      description: |
        Ansible version
      type: string
      default: ''

    galaxy-options:
      description: |
        ansible-galaxy command options
      type: string
      default: ''

    galaxy-requirements-file:
      description: |
        Ansible Galaxy requirements file path
      type: string
      default: ''

    galaxy-roles-path:
      description: |
        ansible-galaxy command roles-path option
      type: string
      default: ''

    inventory:
      description: |
        Ansible inventory file. The default value must be empty,
        so do not register a value with a variable with this name.
        The data must be registered in base64 format
      type: env_var_name
      default: NONEXISTENT_ANSIBLE_INVENTORY

    inventory-parameters:
      description: |
        Ansible inventory parameters
      type: string
      default: ''

    playbook:
      description: |
        The path of Ansible playbook
      type: string

    playbook-options:
      description: |
        Ansible-playbook command options
      type: string
      default: ''

    private-key:
      description: |
        SSH private key file. The default value must be empty,
        so do not register a value with a variable with this name.
        The data must be registered in base64 format
      type: env_var_name
      default: NONEXISTENT_ANSIBLE_SSH_KEY

step-alias: &step-alias
  steps:
    - checkout
    - ansible/install:
        version: <<parameters.version>>
    - ansible/galaxy:
        galaxy-options: <<parameters.galaxy-options>>
        galaxy-requirements-file: <<parameters.galaxy-requirements-file>>
        galaxy-roles-path: <<parameters.galaxy-roles-path>>
    - ansible/playbook:
        inventory: <<parameters.inventory>>
        inventory-parameters: <<parameters.inventory-parameters>>
        playbook: <<parameters.playbook>>
        playbook-options: <<parameters.playbook-options>>
        private-key: <<parameters.private-key>>

galaxy-step-alias: &galaxy-step-alias
  steps:
    - checkout
    - ansible/install:
        version: <<parameters.version>>
    - ansible/galaxy:
        galaxy-options: <<parameters.galaxy-options>>
        galaxy-requirements-file: <<parameters.galaxy-requirements-file>>
        galaxy-roles-path: <<parameters.galaxy-roles-path>>

version: 2.1

orbs:
  orb-tools: circleci/orb-tools@8.20.0
  ansible: orbss/ansible-playbook@0.0.4

executors:
  python:
    docker:
      - image: circleci/python

jobs:
  ansible-install-test:
    executor: python
    parameters:
      version:
        description: |
          Ansible version
        type: string
        default: ''

    steps:
      - ansible/install:
          version: <<parameters.version>>
      - run:
          name: Check if specfic version of Ansible is installed
          command: |
            ansible --version
            if [ <<parameters.version>> == `ansible --version | sed -n 1p | awk '{print $2}'` ]; then
              echo "Ansible version <<parameters.version>> is installed"
            else
              echo "Ansible version <<parameters.version>> is not installed"
            fi

  inventory-test:
    executor: python
    <<: *parameters-alias
    <<: *step-alias

  inventory-parameter-test:
    executor: python
    <<: *parameters-alias
    <<: *step-alias

  galaxy-parameters-fail-test:
    executor: python
    <<: *parameters-alias
    <<: *galaxy-step-alias

  galaxy-options-test:
    executor: python
    <<: *parameters-alias
    <<: *step-alias

  galaxy-requirements-file-test:
    executor: python
    <<: *parameters-alias
    <<: *step-alias

workflows:
  version: 2
  test-checkout:
    jobs:
#      - orb-tools/pack
#      - orb-tools/publish-dev:
#          orb-name: orbss/ansible-playbook
#          requires:
#            - orb-tools/pack
#
      - ansible-install-test:
          version: 2.6.5

      - inventory-test:
          galaxy-requirements-file: tests/requirements.yml
          inventory: ANSIBLE_INVENTORY
          inventory-parameters: -l ec2-1
          playbook: tests/awscli.yml
          private-key: ANSIBLE_SSH_KEY

      - inventory-parameter-test:
          galaxy-options: geerlingguy.packer
          inventory-parameters: -i 34.97.22.246, -u tomonori
          playbook: tests/packer.yml
          private-key: ANSIBLE_SSH_KEY

      - galaxy-parameters-fail-test:
          galaxy-options: geerlingguy.repo-epel
          galaxy-requirements-file: tests/requirements.yml
          inventory-parameters: -i localhost, -c local
          playbook: tests/packer.yml

      - galaxy-options-test:
          galaxy-options: geerlingguy.packer
          inventory-parameters: -i localhost, -c local
          playbook: tests/packer.yml

      - galaxy-requirements-file-test:
          galaxy-requirements-file: tests/requirements.yml
          inventory-parameters: -i localhost, -c local
          playbook: tests/awscli.yml
